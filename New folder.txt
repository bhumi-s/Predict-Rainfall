{"metadata":{"kernelspec":{"name":"python","display_name":"Python (Pyodide)","language":"python"},"language_info":{"codemirror_mode":{"name":"python","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8"}},"nbformat_minor":5,"nbformat":4,"cells":[{"id":"6d347641-28d7-4914-880f-c3f06801d957","cell_type":"code","source":"import numpy as np\nimport pandas as pd\n","metadata":{"trusted":true},"outputs":[],"execution_count":3},{"id":"6c81a1d0-1c32-41a0-b3f6-ba098431516c","cell_type":"code","source":"#import dataset\ndataset = pd.read_csv(\"rainfall.csv\")","metadata":{"trusted":true},"outputs":[],"execution_count":4},{"id":"7852584a-7b97-4b73-8b97-e0ef140d44e4","cell_type":"code","source":"x = dataset.iloc[:,[1,2,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]].values\ny = dataset.iloc[:,-1].values","metadata":{"trusted":true},"outputs":[],"execution_count":8},{"id":"134017f3-9cd8-4b1e-901d-f15d68a7f091","cell_type":"code","source":"print(x)\nprint(y)","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[['Albury' 13.4 22.9 ... 16.9 21.8 'No']\n ['Albury' 7.4 25.1 ... 17.2 24.3 'No']\n ['Albury' 12.9 25.7 ... 21.0 23.2 'No']\n ...\n ['Uluru' 5.4 26.9 ... 12.5 26.1 'No']\n ['Uluru' 7.8 27.0 ... 15.1 26.0 'No']\n ['Uluru' 14.9 nan ... 15.0 20.9 'No']]\n['No' 'No' 'No' ... 'No' 'No' nan]\n"}],"execution_count":9},{"id":"92dbaaf1-55e1-441c-8ce8-326e5266adbe","cell_type":"code","source":"y = y.reshape(-1,1)\nprint (y)\ny = y.flatten()","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[[0]\n [0]\n [0]\n ...\n [0]\n [0]\n [0]]\n"}],"execution_count":15},{"id":"dece153a-4643-4048-8903-ef30b59587be","cell_type":"code","source":"#dealing with invalid dataset\nfrom sklearn.impute import SimpleImputer\nimputer = SimpleImputer(missing_values =np.nan,strategy ='most_frequent')\nx = imputer.fit_transform(x)\ny = imputer.fit_transform(y)","metadata":{"trusted":true},"outputs":[],"execution_count":11},{"id":"14e786ef-f038-4ea5-85a3-a52b2a670d00","cell_type":"code","source":"print(x)\n","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[['Albury' 13.4 22.9 ... 16.9 21.8 'No']\n ['Albury' 7.4 25.1 ... 17.2 24.3 'No']\n ['Albury' 12.9 25.7 ... 21.0 23.2 'No']\n ...\n ['Uluru' 5.4 26.9 ... 12.5 26.1 'No']\n ['Uluru' 7.8 27.0 ... 15.1 26.0 'No']\n ['Uluru' 14.9 20.0 ... 15.0 20.9 'No']]\n"}],"execution_count":12},{"id":"9b469b83-df02-4030-b2cd-54d84d91a01d","cell_type":"code","source":"print(y)","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[['No']\n ['No']\n ['No']\n ...\n ['No']\n ['No']\n ['No']]\n"}],"execution_count":13},{"id":"aa038340-cb24-4fb1-8c87-7812c33f2ed8","cell_type":"markdown","source":"#Encoding data set\nfrom sklearn.preprocessing import LabelEncoder\nle1 = LabelEncoder()\nx[:,0] = le1.fit_transform(x[:,0])\nle2 = LabelEncoder()\nx[:,4] = le2.fit_transform(x[:,4])\nle3 = LabelEncoder()\nx[:,6] =le3 = LabelEncoder()\nx[:,6]= le3.fit_transform(x[:,6])\nle4 = LabelEncoder()\nx[:,7] =le4.fit_transform(x[:,7])\nle5 = LabelEncoder()\nx[:,-1] =le5.fit_transform(x[:,-1])\n\nle6 = LabelEncoder()\ny =le6.fit_transform(y)\n\n","metadata":{}},{"id":"69a435a7-5b70-4801-8496-b554b1b365c3","cell_type":"code","source":"print (dataframe)","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[['Yes' 'No']\n ['Yes' 'No']\n ['No' 'No']\n ...\n ['Yes' 'No']\n ['No' 'No']\n ['No' 'No']]\n"}],"execution_count":78},{"id":"a761bc96-2a0e-4529-94a0-183300ab0771","cell_type":"raw","source":"","metadata":{}},{"id":"35dfe456-f39f-4019-836d-239897386ae8","cell_type":"code","source":"print (y)\nprint (x)\n","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[0 0 0 ... 0 0 0]\n[[2 13.4 22.9 ... 16.9 21.8 0]\n [2 7.4 25.1 ... 17.2 24.3 0]\n [2 12.9 25.7 ... 21.0 23.2 0]\n ...\n [41 5.4 26.9 ... 12.5 26.1 0]\n [41 7.8 27.0 ... 15.1 26.0 0]\n [41 14.9 20.0 ... 15.0 20.9 0]]\n"}],"execution_count":18},{"id":"a1de60f5-7c7f-472d-80ac-a7c3649eb503","cell_type":"code","source":"#feature scaling\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx = sc.fit_transform(x)\n","metadata":{"trusted":true},"outputs":[],"execution_count":19},{"id":"752e8116-97a5-4602-b922-a736966840a7","cell_type":"code","source":"print(x)","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[[-1.53166617  0.19132753 -0.04135977 ... -0.01407077  0.02310362\n  -0.52979545]\n [-1.53166617 -0.75105231  0.26874452 ...  0.03244663  0.387799\n  -0.52979545]\n [-1.53166617  0.11279588  0.35331842 ...  0.62166712  0.22733303\n  -0.52979545]\n ...\n [ 1.20928479 -1.06517892  0.52246622 ... -0.69632607  0.65037966\n  -0.52979545]\n [ 1.20928479 -0.68822699  0.53656187 ... -0.29317521  0.63579185\n  -0.52979545]\n [ 1.20928479  0.42692249 -0.45013361 ... -0.30868102 -0.10818671\n  -0.52979545]]\n"}],"execution_count":20},{"id":"fd1b3544-769b-429b-af66-530907cf2128","cell_type":"code","source":"#splitting data set into training set and test set\n\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size =0.2 ,random_state=0)","metadata":{"trusted":true},"outputs":[],"execution_count":21},{"id":"1fd5e116-78d8-41ec-bc8f-9bf4d8e21ebc","cell_type":"code","source":"print(x_train)\nprint(y_train)","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[[ 0.22535368  1.03946939  0.07140543 ...  0.68369032  0.08145488\n  -0.52979545]\n [ 1.42012717 -0.45263203  0.11369237 ... -0.41722163  0.22733303\n  -0.52979545]\n [ 0.50647685 -0.20133073 -0.14002932 ... -0.06058818 -0.02065982\n   1.88752093]\n ...\n [ 1.0687232   0.75675544  0.93124006 ...  1.10234698  1.07342629\n  -0.52979545]\n [ 0.57675765 -0.04426743 -0.16822062 ...  0.01694083 -0.28324049\n   1.88752093]\n [ 1.63096955 -0.0285611  -0.91529006 ... -0.35519842 -0.76463838\n  -0.52979545]]\n[1 0 0 ... 0 0 0]\n"}],"execution_count":22},{"id":"35164172-77d9-4573-9527-2ef7db5700c1","cell_type":"code","source":"#training model\nfrom sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(n_estimators = 100, random_state = 0)\nclassifier.fit(x_train,y_train)","metadata":{"trusted":true},"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"RandomForestClassifier(random_state=0)","text/html":"<style>#sk-container-id-3 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-3 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-3 pre {\n  padding: 0;\n}\n\n#sk-container-id-3 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-3 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-3 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-3 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-3 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-3 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-3 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-3 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-3 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-3 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-3 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-3 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-3 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-3 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-3 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-3 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n#sk-container-id-3 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-3 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-3 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-3 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-3 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-3 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-3 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-3 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-3 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-3 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomForestClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier(random_state=0)</pre></div> </div></div></div></div>"},"metadata":{}}],"execution_count":26},{"id":"1e78a820-cdd6-4481-add0-a8cca39384e6","cell_type":"code","source":"print (classifier.score(x_train,y_train))","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"0.9999140657225354\n"}],"execution_count":42},{"id":"a7e1b491-fbb2-43f5-84c1-77d7a2c68630","cell_type":"code","source":"y_pred = classifier.predict(x_test)","metadata":{"trusted":true},"outputs":[],"execution_count":44},{"id":"3732a1ee-ee8c-4719-a6d7-115f712ed227","cell_type":"code","source":"print(y_pred)","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[0 0 0 ... 0 0 0]\n"}],"execution_count":45},{"id":"469aae5a-ac73-42a7-be70-76058a47e1e2","cell_type":"code","source":"y_pred1 = le6.inverse_transform(y_pred)\ny_test1 = le6.inverse_transform(y_test)\n\n","metadata":{"trusted":true},"outputs":[],"execution_count":62},{"id":"893758e4-4eea-405e-bd56-4c517f2d621f","cell_type":"code","source":"print(y_pred1)","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[0 0 0 ... 0 0 0]\n"}],"execution_count":53},{"id":"31ef8911-18ff-4155-af6f-05ff2b4f140d","cell_type":"code","source":"\nprint(y_test)","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[1 1 0 ... 1 0 0]\n"}],"execution_count":63},{"id":"1eee16d3-9f40-40cb-804d-4ab622854ea8","cell_type":"code","source":"y_test = y_test.reshape(-1,1)\ny_pred = y_pred.reshape(-1,1)","metadata":{"trusted":true},"outputs":[],"execution_count":66},{"id":"b89cf557-0ae7-4356-8d9b-9b1623b84ef2","cell_type":"code","source":"df = np.concatenate((y_test.reshape(-1, 1), y_pred.reshape(-1, 1)), axis=1)\n\ndf = np.concatenate((y_test,y_pred),axis = 1)","metadata":{"trusted":true},"outputs":[],"execution_count":67},{"id":"ea9add8f-ca8e-41aa-978d-5d801d00c299","cell_type":"code","source":"dataframe = pd.DataFrame(df,columns = ['rain on tommorrow','prediction of rain '])\n                                      ","metadata":{"trusted":true},"outputs":[],"execution_count":68},{"id":"161dd691-0848-46a4-88b8-3afd11a83c21","cell_type":"code","source":"print (dataframe)","metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"       rain on tommorrow  prediction of rain \n0                      1                    0\n1                      1                    0\n2                      0                    0\n3                      0                    0\n4                      0                    0\n...                  ...                  ...\n29087                  0                    1\n29088                  0                    0\n29089                  1                    0\n29090                  0                    0\n29091                  0                    0\n\n[29092 rows x 2 columns]\n"}],"execution_count":69},{"id":"a8efdd23-a28e-4d80-b7e4-a099d3bdc192","cell_type":"code","source":"dataframe = np.where(dataframe == 1, \"Yes\", \"No\")\n","metadata":{"trusted":true},"outputs":[],"execution_count":77},{"id":"d6d6a44a-c3bb-4757-9587-08f9e00e7030","cell_type":"code","source":"dataframe.to_csv('prediction.csv', index=False)  # Corrected line\n","metadata":{"trusted":true},"outputs":[{"ename":"<class 'AttributeError'>","evalue":"'numpy.ndarray' object has no attribute 'to_csv'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","Cell \u001b[0;32mIn[82], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mdataframe\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mto_csv\u001b[49m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mprediction.csv\u001b[39m\u001b[38;5;124m'\u001b[39m, index\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m)  \u001b[38;5;66;03m# Corrected line\u001b[39;00m\n","\u001b[0;31mAttributeError\u001b[0m: 'numpy.ndarray' object has no attribute 'to_csv'"],"output_type":"error"}],"execution_count":82},{"id":"6a9e3911-ff72-484b-9ad8-ffc311cd8168","cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}